# Global configuration section: lists input and output devices always present 
# on the device as well as the output device selected by default.
# Devices are designated by a string that corresponds to the enum in audio.h

# -------------------- Usage Note: ----------------------
# Depending on the device, it may be more appropriate to set the output
# device to AUDIO_DEVICE_OUT_SPEAKER.  Unfortunately,
# AudioPolicyManagerBase::loadGlobalConfig() in AudioPolicyManagerBase.cpp
# does not allow us to specify multiple default output devices.
# Also, the codec may be set to report the headset presence to a switch
# device named h2w.  Unfortunately, detection is not possible with the
# codec connection on the 1348 carrier board.
#
global_configuration {
  attached_output_devices AUDIO_DEVICE_OUT_SPEAKER
  default_output_device AUDIO_DEVICE_OUT_SPEAKER
}

# audio hardware module section: contains descriptors for all audio hw modules present on the
# device. Each hw module node is named after the corresponding hw module library base name.
# For instance, "primary" corresponds to audio.primary.<device>.so.
# The "primary" module is mandatory and must include at least one output with
# AUDIO_OUTPUT_FLAG_PRIMARY flag.
# Each module descriptor contains one or more output profile descriptors and zero or more
# input profile descriptors. Each profile lists all the parameters supported by a given output
# or input stream category.
# The "channel_masks", "formats", "devices" and "flags" are specified using strings corresponding
# to enums in audio.h and audio_policy.h. They are concatenated by use of "|" without space or "\n".

#        devices AUDIO_DEVICE_OUT_SPEAKER|AUDIO_DEVICE_OUT_WIRED_HEADPHONE

audio_hw_modules {
  primary {
    outputs {
      primary {
        sampling_rates 44100
        channel_masks AUDIO_CHANNEL_OUT_STEREO
        formats AUDIO_FORMAT_PCM_16_BIT
        devices AUDIO_DEVICE_OUT_SPEAKER
        flags AUDIO_OUTPUT_FLAG_PRIMARY
      }
    }
}
